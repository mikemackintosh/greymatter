user nginx;
worker_processes 1;
events {
    worker_connections 2048;
}

error_log /dev/stdout info;

http {
    types {
        text/html html htm shtm;
        text/css css;
        text/xml xml rss;
        image/gif gif;
        image/jpeg jpeg jpg;
        application/x-javascript js;
        text/plain txt log;
        image/png png;
        image/x-icon ico;
        application/zip zip;
        application/octet-stream img iso dmg bin exe dll;
    }

    default_type application/octet-stream;

    map $status $loggable_status {
        ~^[23] 0;
        default 1;
    }

    map $http_user_agent $loggable {
        ~^(Prometheus) 0;
        default $loggable_status;
    }

    log_format backend '[BACKEND]  $time_local  $status '
        '"$request" $body_bytes_sent "$http_referrer" '
        '"$http_user_agent" $http_x_forwarded_for"';
    
    log_format frontend '[FRONTEND] $time_local  $status '
        '"$request" $body_bytes_sent "$http_referrer" '
        '"$http_user_agent" $http_x_forwarded_for"'; 

    log_format kratos '[KRATOS] $time_local  $status '
        '"$request" $body_bytes_sent "$http_referrer" '
        '"$http_user_agent" $http_x_forwarded_for"';  

    log_format krato_ss '[LOGIN] $time_local  $status '
        '"$request" $body_bytes_sent "$http_referrer" '
        '"$http_user_agent" $http_x_forwarded_for"';                 

    log_format keto '[KETO] $time_local  $status '
        '"$request" $body_bytes_sent "$http_referrer" '
        '"$http_user_agent" $http_x_forwarded_for"';         

    access_log /dev/stdout;
    sendfile on;
    tcp_nopush on;
    server_names_hash_bucket_size 256;

    proxy_redirect off;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    client_max_body_size 10m;
    client_body_buffer_size 128k;
    proxy_connect_timeout 30;
    proxy_send_timeout 30;
    proxy_read_timeout 30;
    proxy_buffers 32 4k;

    server {
        listen 8000;
        listen [::]:8000;

        server_name _;
        server_tokens off;
        
        location /api/ {
            access_log /dev/stdout backend if=$loggable;
            proxy_pass http://backend:8080;
        }

        location / {
            access_log /dev/stdout frontend if=$loggable;
            proxy_pass http://frontend:3000;
        }

        location /self-service {
            access_log /dev/stdout kratos if=$loggable;
            proxy_pass http://kratos:4433;
            proxy_set_header Accept-Encoding "";       
        }

        location /admin {
            access_log /dev/stdout kratos if=$loggable;
            proxy_pass http://kratos:4434;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /keto-read {
            access_log /dev/stdout keto if=$loggable;
            proxy_pass http://keto:4466;
        }

        location /keto-write {
            access_log /dev/stdout keto if=$loggable;
            proxy_pass http://keto:4467;
        }
    }     
}